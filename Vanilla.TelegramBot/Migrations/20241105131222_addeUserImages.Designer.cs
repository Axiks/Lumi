// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vanilla.TelegramBot;

#nullable disable

namespace Vanilla.TelegramBot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241105131222_addeUserImages")]
    partial class addeUserImages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Vanilla.TelegramBot.Entityes.ImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("TgMediaId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TgUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserEntityUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityUserId");

                    b.ToTable("ImageEntity");
                });

            modelBuilder.Entity("Vanilla.TelegramBot.Entityes.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vanilla.TelegramBot.Entityes.ImageEntity", b =>
                {
                    b.HasOne("Vanilla.TelegramBot.Entityes.UserEntity", null)
                        .WithMany("Images")
                        .HasForeignKey("UserEntityUserId");
                });

            modelBuilder.Entity("Vanilla.TelegramBot.Entityes.UserEntity", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
